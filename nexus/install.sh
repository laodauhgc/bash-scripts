#!/bin/bash
set -e

# Version: 1.3.2  # C·∫≠p nh·∫≠t version sau khi s·ª≠a CLI t·∫£i binary m·ªõi nh·∫•t v√† h·ªó tr·ª£ ARM
# Bi·∫øn c·∫•u h√¨nh
CONTAINER_NAME="nexus-node"
IMAGE_NAME="nexus-node:latest"
LOG_FILE="/root/nexus_logs/nexus.log"
CREDENTIALS_DIR="/root/nexus_credentials"  # Th∆∞ m·ª•c host ƒë·ªÉ mount ~/.nexus
NODE_ID_FILE="/root/nexus_node_id.txt"  # File l∆∞u node ID
SWAP_FILE="/swapfile"
WALLET_ADDRESS="$1"
NO_SWAP=0
LANGUAGE="vi"
SETUP_CRON=0  # M·∫∑c ƒë·ªãnh kh√¥ng t·ª± ƒë·ªông thi·∫øt l·∫≠p cron

# Parse arguments
shift
while [ $# -gt 0 ]; do
    case "$1" in
        --no-swap) NO_SWAP=1; shift ;;
        --en) LANGUAGE="en"; shift ;;
        --ru) LANGUAGE="ru"; shift ;;
        --cn) LANGUAGE="cn"; shift ;;
        --setup-cron) SETUP_CRON=1; shift ;;
        *) print_warning "$(printf "$WARN_INVALID_FLAG" "$1")"; shift ;;
    esac
done

# ƒê·ªãnh nghƒ©a m√†u s·∫Øc v√† icon
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# H√†m in output v·ªõi m√†u v√† icon
print_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
print_error() { echo -e "${RED}‚ùå $1${NC}"; }
print_warning() { echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"; }
print_info() { echo -e "${BLUE}‚ÑπÔ∏è $1${NC}"; }
print_progress() { echo -e "${CYAN}‚è≥ $1${NC}"; }
print_node() { echo -e "${GREEN}üöÄ $1${NC}"; }
print_log() { echo -e "${CYAN}üìú $1${NC}"; }
print_swap() { echo -e "${BLUE}üíæ $1${NC}"; }
print_docker() { echo -e "${BLUE}üê≥ $1${NC}"; }

# ƒê·ªãnh nghƒ©a t·∫•t c·∫£ th√¥ng b√°o d·ª±a tr√™n ng√¥n ng·ªØ
case $LANGUAGE in
    vi)
        BANNER="===== C√†i ƒê·∫∑t Node Nexus v1.3.2 (H·ªó tr·ª£ ARM) ====="
        ERR_NO_WALLET="L·ªói: Vui l√≤ng cung c·∫•p wallet address. C√°ch d√πng: $0 <wallet_address> [--no-swap] [--en|--ru|--cn] [--setup-cron]"
        WARN_INVALID_FLAG="C·∫£nh b√°o: Flag kh√¥ng h·ª£p l·ªá: %s. B·ªè qua."
        SKIP_SWAP_FLAG="B·ªè qua t·∫°o swap theo y√™u c·∫ßu (--no-swap)."
        INSTALLING_DOCKER="C√†i ƒë·∫∑t Docker..."
        ERR_INSTALL_DOCKER="L·ªói: Kh√¥ng th·ªÉ c√†i ƒë·∫∑t Docker."
        ERR_DOCKER_NOT_RUNNING="L·ªói: Docker daemon kh√¥ng ch·∫°y."
        ERR_DOCKER_PERMISSION="L·ªói: Kh√¥ng c√≥ quy·ªÅn ch·∫°y Docker. Ki·ªÉm tra c√†i ƒë·∫∑t ho·∫∑c th√™m user v√†o nh√≥m docker."
        BUILDING_IMAGE="B·∫Øt ƒë·∫ßu x√¢y d·ª±ng image %s‚Ä¶"
        ERR_BUILD_IMAGE="L·ªói: Kh√¥ng th·ªÉ x√¢y d·ª±ng image %s."
        BUILD_IMAGE_SUCCESS="X√¢y d·ª±ng image %s th√†nh c√¥ng."
        NODE_STARTED="ƒê√£ ch·∫°y node v·ªõi wallet_address=%s, max_threads=%s."
        LOG_FILE_MSG="Log: %s"
        VIEW_LOG="Xem log theo th·ªùi gian th·ª±c: docker logs -f %s"
        NOT_LINUX="H·ªá th·ªëng kh√¥ng ph·∫£i Linux, b·ªè qua t·∫°o swap."
        WARN_NO_RAM="C·∫£nh b√°o: Kh√¥ng th·ªÉ x√°c ƒë·ªãnh RAM h·ªá th·ªëng. B·ªè qua t·∫°o swap v√† ti·∫øp t·ª•c ch·∫°y node."
        RAM_DETECTED="T·ªïng RAM ph√°t hi·ªán: %s MB. Ti·∫øp t·ª•c ki·ªÉm tra swap..."
        SWAP_EXISTS="Swap ƒë√£ t·ªìn t·∫°i (%s MB), b·ªè qua t·∫°o swap."
        INSUFFICIENT_DISK="Kh√¥ng ƒë·ªß dung l∆∞·ª£ng ·ªï c·ª©ng (%s MB) ƒë·ªÉ t·∫°o swap t·ªëi thi·ªÉu (%s MB). B·ªè qua."
        WARN_INVALID_SWAP_SIZE="C·∫£nh b√°o: K√≠ch th∆∞·ªõc swap kh√¥ng h·ª£p l·ªá (%s MB). B·ªè qua t·∫°o swap."
        CREATING_SWAP="T·∫°o swap %s MB..."
        WARN_CREATE_SWAP_FAIL="C·∫£nh b√°o: Kh√¥ng th·ªÉ t·∫°o file swap. B·ªè qua."
        SWAP_CREATED="Swap ƒë√£ ƒë∆∞·ª£c t·∫°o v√† k√≠ch ho·∫°t (%s MB)."
        ERR_MISSING_WALLET="L·ªói: Thi·∫øu wallet address ho·∫∑c node ID."
        REGISTERING_WALLET="ƒêƒÉng k√Ω v√≠ v·ªõi wallet: %s"
        ERR_REGISTER_WALLET="L·ªói: Kh√¥ng th·ªÉ ƒëƒÉng k√Ω v√≠. Xem log:"
        SUPPORT_INFO="Th√¥ng tin h·ªó tr·ª£:"
        REGISTERING_NODE="ƒêƒÉng k√Ω node..."
        ERR_REGISTER_NODE="L·ªói: Kh√¥ng th·ªÉ ƒëƒÉng k√Ω node. Xem log:"
        NODE_STARTED_ENTRY="Node ƒë√£ kh·ªüi ƒë·ªông v·ªõi wallet_address=%s, max_threads=%s. Log: /root/nexus.log"
        STARTUP_FAILED="Kh·ªüi ƒë·ªông th·∫•t b·∫°i. Xem log:"
        NODE_ID_SAVED="Node ID ƒë√£ ƒë∆∞·ª£c l∆∞u: %s"
        USING_EXISTING_NODE_ID="S·ª≠ d·ª•ng node ID hi·ªán c√≥: %s"
        CRON_SETUP="Thi·∫øt l·∫≠p cron job ƒë·ªÉ kh·ªüi t·∫°o l·∫°i container m·ªói gi·ªù."
        CRON_INSTRUCTION="Cron job ƒë√£ ƒë∆∞·ª£c th√™m: @hourly docker rm -f %s; /bin/bash %s %s"
        ARCH_DETECTED="Ph√°t hi·ªán ki·∫øn tr√∫c h·ªá th·ªëng: %s. S·ª≠ d·ª•ng CLI ph√π h·ª£p."
        ;;
    en)
        BANNER="===== Nexus Node Setup v1.3.2 (ARM Support) ====="
        ERR_NO_WALLET="Error: Please provide wallet address. Usage: $0 <wallet_address> [--no-swap] [--en|--ru|--cn] [--setup-cron]"
        WARN_INVALID_FLAG="Warning: Invalid flag: %s. Skipping."
        SKIP_SWAP_FLAG="Skipping swap creation as per request (--no-swap)."
        INSTALLING_DOCKER="Installing Docker..."
        ERR_INSTALL_DOCKER="Error: Unable to install Docker."
        ERR_DOCKER_NOT_RUNNING="Error: Docker daemon is not running."
        ERR_DOCKER_PERMISSION="Error: No permission to run Docker. Check installation or add user to docker group."
        BUILDING_IMAGE="Starting to build image %s..."
        ERR_BUILD_IMAGE="Error: Unable to build image %s."
        BUILD_IMAGE_SUCCESS="Built image %s successfully."
        NODE_STARTED="Node started with wallet_address=%s, max_threads=%s."
        LOG_FILE_MSG="Log: %s"
        VIEW_LOG="View real-time log: docker logs -f %s"
        NOT_LINUX="System is not Linux, skipping swap creation."
        WARN_NO_RAM="Warning: Unable to determine system RAM. Skipping swap creation and continuing to run node."
        RAM_DETECTED="Detected total RAM: %s MB. Continuing to check swap..."
        SWAP_EXISTS="Swap already exists (%s MB), skipping swap creation."
        INSUFFICIENT_DISK="Insufficient disk space (%s MB) to create minimum swap (%s MB). Skipping."
        WARN_INVALID_SWAP_SIZE="Warning: Invalid swap size (%s MB). Skipping swap creation."
        CREATING_SWAP="Creating swap %s MB..."
        WARN_CREATE_SWAP_FAIL="Warning: Unable to create swap file. Skipping."
        SWAP_CREATED="Swap created and activated (%s MB)."
        ERR_MISSING_WALLET="Error: Missing wallet address or node ID."
        REGISTERING_WALLET="Registering wallet with: %s"
        ERR_REGISTER_WALLET="Error: Unable to register wallet. Check log:"
        SUPPORT_INFO="Support information:"
        REGISTERING_NODE="Registering node..."
        ERR_REGISTER_NODE="Error: Unable to register node. Check log:"
        NODE_STARTED_ENTRY="Node started with wallet_address=%s, max_threads=%s. Log: /root/nexus.log"
        STARTUP_FAILED="Startup failed. Check log:"
        NODE_ID_SAVED="Node ID saved: %s"
        USING_EXISTING_NODE_ID="Using existing node ID: %s"
        CRON_SETUP="Setting up cron job to recreate container every hour."
        CRON_INSTRUCTION="Cron job added: @hourly docker rm -f %s; /bin/bash %s %s"
        ARCH_DETECTED="Detected system architecture: %s. Using appropriate CLI."
        ;;
    ru)
        BANNER="===== –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –£–∑–ª–∞ Nexus v1.3.2 (–ü–æ–¥–¥–µ—Ä–∂–∫–∞ ARM) ====="
        ERR_NO_WALLET="–û—à–∏–±–∫–∞: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <wallet_address> [--no-swap] [--en|--ru|--cn] [--setup-cron]"
        WARN_INVALID_FLAG="–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ñ–ª–∞–≥: %s. –ü—Ä–æ–ø—É—Å–∫–∞—é."
        SKIP_SWAP_FLAG="–ü—Ä–æ–ø—É—Å–∫ —Å–æ–∑–¥–∞–Ω–∏—è swap –ø–æ –∑–∞–ø—Ä–æ—Å—É (--no-swap)."
        INSTALLING_DOCKER="–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
        ERR_INSTALL_DOCKER="–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker."
        ERR_DOCKER_NOT_RUNNING="–û—à–∏–±–∫–∞: Daemon Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω."
        ERR_DOCKER_PERMISSION="–û—à–∏–±–∫–∞: –ù–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∑–∞–ø—É—Å–∫ Docker. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker."
        BUILDING_IMAGE="–ù–∞—á–∞–ª–æ —Å–±–æ—Ä–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è %s..."
        ERR_BUILD_IMAGE="–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–µ—Ç—Å—è —Å–æ–±—Ä–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ %s."
        BUILD_IMAGE_SUCCESS="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ %s —Å–æ–±—Ä–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ."
        NODE_STARTED="–£–∑–µ–ª –∑–∞–ø—É—â–µ–Ω —Å wallet_address=%s, max_threads=%s."
        LOG_FILE_MSG="–õ–æ–≥: %s"
        VIEW_LOG="–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏: docker logs -f %s"
        NOT_LINUX="–°–∏—Å—Ç–µ–º–∞ –Ω–µ Linux, –ø—Ä–æ–ø—É—Å–∫ —Å–æ–∑–¥–∞–Ω–∏—è swap."
        WARN_NO_RAM="–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å RAM —Å–∏—Å—Ç–µ–º—ã. –ü—Ä–æ–ø—É—Å–∫ —Å–æ–∑–¥–∞–Ω–∏—è swap –∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —É–∑–ª–∞."
        RAM_DETECTED="–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –≤—Å–µ–≥–æ RAM: %s –ú–ë. –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ swap..."
        SWAP_EXISTS="Swap —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (%s –ú–ë), –ø—Ä–æ–ø—É—Å–∫ —Å–æ–∑–¥–∞–Ω–∏—è swap."
        INSUFFICIENT_DISK="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ (%s –ú–ë) –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ swap (%s –ú–ë). –ü—Ä–æ–ø—É—Å–∫."
        WARN_INVALID_SWAP_SIZE="–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ä–∞–∑–º–µ—Ä swap (%s –ú–ë). –ü—Ä–æ–ø—É—Å–∫ —Å–æ–∑–¥–∞–Ω–∏—è swap."
        CREATING_SWAP="–°–æ–∑–¥–∞–Ω–∏–µ swap %s –ú–ë..."
        WARN_CREATE_SWAP_FAIL="–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª swap. –ü—Ä–æ–ø—É—Å–∫."
        SWAP_CREATED="Swap —Å–æ–∑–¥–∞–Ω –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω (%s –ú–ë)."
        ERR_MISSING_WALLET="–û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ –∏–ª–∏ node ID."
        REGISTERING_WALLET="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ—à–µ–ª—å–∫–∞ —Å: %s"
        ERR_REGISTER_WALLET="–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–µ—Ç—Å—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ—à–µ–ª–µ–∫. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥:"
        SUPPORT_INFO="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏:"
        REGISTERING_NODE="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É–∑–ª–∞..."
        ERR_REGISTER_NODE="–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–µ—Ç—Å—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —É–∑–µ–ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥:"
        NODE_STARTED_ENTRY="–£–∑–µ–ª –∑–∞–ø—É—â–µ–Ω —Å wallet_address=%s, max_threads=%s. –õ–æ–≥: /root/nexus.log"
        STARTUP_FAILED="–ó–∞–ø—É—Å–∫ –Ω–µ—É–¥–∞—á–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥:"
        NODE_ID_SAVED="Node ID —Å–æ—Ö—Ä–∞–Ω–µ–Ω: %s"
        USING_EXISTING_NODE_ID="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ node ID: %s"
        CRON_SETUP="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ cron-–∑–∞–¥–∞–Ω–∏—è –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∫–∞–∂–¥—ã–π —á–∞—Å."
        CRON_INSTRUCTION="Cron-–∑–∞–¥–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ: @hourly docker rm -f %s; /bin/bash %s %s"
        ARCH_DETECTED="–û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–∏—Å—Ç–µ–º—ã: %s. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ CLI."
        ;;
    cn)
        BANNER="===== Nexus ËäÇÁÇπËÆæÁΩÆ v1.3.2 (ARM ÊîØÊåÅ) ====="
        ERR_NO_WALLET="ÈîôËØØÔºöËØ∑Êèê‰æõÈí±ÂåÖÂú∞ÂùÄ„ÄÇÁî®Ê≥ïÔºö$0 <wallet_address> [--no-swap] [--en|--ru|--cn] [--setup-cron]"
        WARN_INVALID_FLAG="Ë≠¶ÂëäÔºöÊó†ÊïàÊ†áÂøóÔºö%s„ÄÇË∑≥Ëøá„ÄÇ"
        SKIP_SWAP_FLAG="Ê†πÊçÆËØ∑Ê±ÇË∑≥ËøáswapÂàõÂª∫ (--no-swap)„ÄÇ"
        INSTALLING_DOCKER="Ê≠£Âú®ÂÆâË£ÖDocker..."
        ERR_INSTALL_DOCKER="ÈîôËØØÔºöÊó†Ê≥ïÂÆâË£ÖDocker„ÄÇ"
        ERR_DOCKER_NOT_RUNNING="ÈîôËØØÔºöDockerÂÆàÊä§ËøõÁ®ãÊú™ËøêË°å„ÄÇ"
        ERR_DOCKER_PERMISSION="ÈîôËØØÔºöÊ≤°ÊúâËøêË°åDockerÁöÑÊùÉÈôê„ÄÇËØ∑Ê£ÄÊü•ÂÆâË£ÖÊàñÂ∞ÜÁî®Êà∑Ê∑ªÂä†Âà∞dockerÁªÑ„ÄÇ"
        BUILDING_IMAGE="ÂºÄÂßãÊûÑÂª∫ÂõæÂÉè %s..."
        ERR_BUILD_IMAGE="ÈîôËØØÔºöÊó†Ê≥ïÊûÑÂª∫ÂõæÂÉè %s„ÄÇ"
        BUILD_IMAGE_SUCCESS="ÂõæÂÉè %s ÊûÑÂª∫ÊàêÂäü„ÄÇ"
        NODE_STARTED="ËäÇÁÇπÂ∑≤ÂêØÂä®Ôºåwallet_address=%s, max_threads=%s„ÄÇ"
        LOG_FILE_MSG="Êó•ÂøóÔºö%s"
        VIEW_LOG="Êü•ÁúãÂÆûÊó∂Êó•ÂøóÔºödocker logs -f %s"
        NOT_LINUX="Á≥ªÁªü‰∏çÊòØLinuxÔºåË∑≥ËøáswapÂàõÂª∫„ÄÇ"
        WARN_NO_RAM="Ë≠¶ÂëäÔºöÊó†Ê≥ïÁ°ÆÂÆöÁ≥ªÁªüRAM„ÄÇË∑≥ËøáswapÂàõÂª∫Âπ∂ÁªßÁª≠ËøêË°åËäÇÁÇπ„ÄÇ"
        RAM_DETECTED="Ê£ÄÊµãÂà∞ÊÄªRAMÔºö%s MB„ÄÇÁªßÁª≠Ê£ÄÊü•swap..."
        SWAP_EXISTS="SwapÂ∑≤Â≠òÂú®Ôºà%s MBÔºâÔºåË∑≥ËøáswapÂàõÂª∫„ÄÇ"
        INSUFFICIENT_DISK="Á£ÅÁõòÁ©∫Èó¥‰∏çË∂≥Ôºà%s MBÔºâÊù•ÂàõÂª∫ÊúÄÂ∞èswapÔºà%s MBÔºâ„ÄÇË∑≥Ëøá„ÄÇ"
        WARN_INVALID_SWAP_SIZE="Ë≠¶ÂëäÔºöÊó†ÊïàÁöÑswapÂ§ßÂ∞èÔºà%s MBÔºâ„ÄÇË∑≥ËøáswapÂàõÂª∫„ÄÇ"
        CREATING_SWAP="ÂàõÂª∫swap %s MB..."
        WARN_CREATE_SWAP_FAIL="Ë≠¶ÂëäÔºöÊó†Ê≥ïÂàõÂª∫swapÊñá‰ª∂„ÄÇË∑≥Ëøá„ÄÇ"
        SWAP_CREATED="SwapÂ∑≤ÂàõÂª∫Âπ∂ÊøÄÊ¥ªÔºà%s MBÔºâ„ÄÇ"
        ERR_MISSING_WALLET="ÈîôËØØÔºöÁº∫Â∞ëÈí±ÂåÖÂú∞ÂùÄÊàñnode ID„ÄÇ"
        REGISTERING_WALLET="Ê≠£Âú®Ê≥®ÂÜåÈí±ÂåÖÔºö%s"
        ERR_REGISTER_WALLET="ÈîôËØØÔºöÊó†Ê≥ïÊ≥®ÂÜåÈí±ÂåÖ„ÄÇÊ£ÄÊü•Êó•ÂøóÔºö"
        SUPPORT_INFO="ÊîØÊåÅ‰ø°ÊÅØÔºö"
        REGISTERING_NODE="Ê≠£Âú®Ê≥®ÂÜåËäÇÁÇπ..."
        ERR_REGISTER_NODE="ÈîôËØØÔºöÊó†Ê≥ïÊ≥®ÂÜåËäÇÁÇπ„ÄÇÊ£ÄÊü•Êó•ÂøóÔºö"
        NODE_STARTED_ENTRY="ËäÇÁÇπÂ∑≤ÂêØÂä®Ôºåwallet_address=%s, max_threads=%s„ÄÇÊó•ÂøóÔºö/root/nexus.log"
        STARTUP_FAILED="ÂêØÂä®Â§±Ë¥•„ÄÇÊ£ÄÊü•Êó•ÂøóÔºö"
        NODE_ID_SAVED="Node ID Â∑≤‰øùÂ≠òÔºö%s"
        USING_EXISTING_NODE_ID="‰ΩøÁî®Áé∞ÊúâÁöÑ node IDÔºö%s"
        CRON_SETUP="ËÆæÁΩÆ cron ‰Ωú‰∏öÊØèÂ∞èÊó∂ÈáçÊñ∞ÂàõÂª∫ÂÆπÂô®„ÄÇ"
        CRON_INSTRUCTION="Cron ‰Ωú‰∏öÂ∑≤Ê∑ªÂä†Ôºö@hourly docker rm -f %s; /bin/bash %s %s"
        ARCH_DETECTED="Ê£ÄÊµãÂà∞Á≥ªÁªüÊû∂ÊûÑÔºö%s„ÄÇ‰ΩøÁî®ÈÄÇÂΩìÁöÑ CLI„ÄÇ"
        ;;
esac

# In banner ƒë·∫ßu ti√™n
print_info "$BANNER"

# Ki·ªÉm tra wallet address
if [ -z "$WALLET_ADDRESS" ]; then
    print_error "$ERR_NO_WALLET"
    exit 1
fi

# X√°c ƒë·ªãnh s·ªë lu·ªìng d·ª±a tr√™n s·ªë vCPU
max_threads=$(nproc)

# Ph√°t hi·ªán ki·∫øn tr√∫c h·ªá th·ªëng ƒë·ªÉ ch·ªçn CLI
ARCH=$(uname -m)
print_info "$(printf "$ARCH_DETECTED" "$ARCH")"
CLI_URL="https://github.com/nexus-xyz/nexus-cli/releases/download/v0.10.1/nexus-network-linux-x86_64"
if [ "$ARCH" = "aarch64" ]; then
    CLI_URL="https://github.com/nexus-xyz/nexus-cli/releases/download/v0.10.1/nexus-network-linux-arm64"
fi

# H√†m t·∫°o swap t·ª± ƒë·ªông (gi·ªØ nguy√™n nh∆∞ tr∆∞·ªõc)

# Ki·ªÉm tra v√† c√†i ƒë·∫∑t Docker (gi·ªØ nguy√™n nh∆∞ tr∆∞·ªõc)

# X√¢y d·ª±ng Docker image (s·ª≠a ph·∫ßn t·∫£i CLI d·ª±a tr√™n CLI_URL)
build_image() {
    print_progress "$(printf "$BUILDING_IMAGE" "$IMAGE_NAME")"
    workdir=$(mktemp -d)
    cd "$workdir"

    cat > Dockerfile <<EOF
FROM ubuntu:24.04
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y curl screen bash jq && rm -rf /var/lib/apt/lists/*
RUN curl -L $CLI_URL -o /usr/local/bin/nexus-network && chmod +x /usr/local/bin/nexus-network
RUN mkdir -p /root/.nexus # T·∫°o th∆∞ m·ª•c n·∫øu CLI c·∫ßn
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]
EOF

    cat > entrypoint.sh <<EOF
#!/bin/bash
set -e
if [ -z "\$WALLET_ADDRESS" ] && [ -z "\$NODE_ID" ]; then
    echo "${RED}‚ùå $ERR_MISSING_WALLET${NC}"
    exit 1
fi

if [ -n "\$NODE_ID" ]; then
    echo "${CYAN}‚è≥ Starting with node ID: \$NODE_ID${NC}"
    screen -dmS nexus bash -c "nexus-network start --node-id \$NODE_ID --max-threads $max_threads &>> /root/nexus.log"
else
    printf "${CYAN}‚è≥ $REGISTERING_WALLET\n${NC}" "\$WALLET_ADDRESS"
    nexus-network register-user --wallet-address "\$WALLET_ADDRESS" &>> /root/nexus.log
    if [ \$? -ne 0 ]; then
        echo "${RED}‚ùå $ERR_REGISTER_WALLET${NC}"
        cat /root/nexus.log
        echo "${BLUE}‚ÑπÔ∏è $SUPPORT_INFO${NC}"
        nexus-network --help &>> /root/nexus.log
        cat /root/nexus.log
        exit 1
    fi
    echo "${CYAN}‚è≥ $REGISTERING_NODE${NC}"
    nexus-network register-node &>> /root/nexus.log
    if [ \$? -ne 0 ]; then
        echo "${RED}‚ùå $ERR_REGISTER_NODE${NC}"
        cat /root/nexus.log
        echo "${BLUE}‚ÑπÔ∏è $SUPPORT_INFO${NC}"
        nexus-network register-node --help &>> /root/nexus.log
        cat /root/nexus.log
        exit 1
    fi
    screen -dmS nexus bash -c "nexus-network start --max-threads $max_threads &>> /root/nexus.log"
fi
sleep 3
if screen -list | grep -q "nexus"; then
    printf "${GREEN}üöÄ $NODE_STARTED_ENTRY\n${NC}" "\$WALLET_ADDRESS" "$max_threads"
else
    echo "${RED}‚ùå $STARTUP_FAILED${NC}"
    cat /root/nexus.log
    exit 1
fi
tail -f /root/nexus.log
EOF

    if ! docker build -t "$IMAGE_NAME" .; then
        print_error "$(printf "$ERR_BUILD_IMAGE" "$IMAGE_NAME")"
        cd -
        rm -rf "$workdir"
        exit 1
    fi
    cd -
    rm -rf "$workdir"
    print_success "$(printf "$BUILD_IMAGE_SUCCESS" "$IMAGE_NAME")"
}

# H√†m thi·∫øt l·∫≠p cron job (gi·ªØ nguy√™n nh∆∞ tr∆∞·ªõc)

# Ch·∫°y container (gi·ªØ nguy√™n nh∆∞ tr∆∞·ªõc)

# T·∫°o swap tr∆∞·ªõc khi ch·∫°y node (gi·ªØ nguy√™n nh∆∞ tr∆∞·ªõc)

# X√¢y d·ª±ng v√† ch·∫°y
build_image
run_container

# Thi·∫øt l·∫≠p cron job n·∫øu c√≥ flag --setup-cron (gi·ªØ nguy√™n nh∆∞ tr∆∞·ªõc)
